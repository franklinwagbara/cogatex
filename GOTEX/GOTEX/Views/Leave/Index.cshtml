@*@model GOTEX.Core.BusinessObjects.Leave

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<h4>Leave</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="StaffId" class="control-label"></label>
                <input asp-for="StaffId" class="form-control" />
                <span asp-validation-for="StaffId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ActingStaffId" class="control-label"></label>
                <input asp-for="ActingStaffId" class="form-control" />
                <span asp-validation-for="ActingStaffId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Start" class="control-label"></label>
                <input asp-for="Start" class="form-control" />
                <span asp-validation-for="Start" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="End" class="control-label"></label>
                <input asp-for="End" class="form-control" />
                <span asp-validation-for="End" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsApproved" /> @Html.DisplayNameFor(model => model.IsApproved)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
*@

<style>
    .title{
        display: flex;
        justify-content: center;
        width: 100%;
        padding: 2rem;
    }

    .title h2{
        font-weight: bolder;
    }

    .form-section{
        position: relative;
        display: flex;
        margin: 0 auto;
        flex-direction: column;
        justify-content: center;
        width: 700px;
    }

    .error-summary{
        position: relative;
        margin: 0 auto;
        background-color: #f78159;
        min-height: 3rem;
        padding: 1rem;
        border-radius: 10px;
        width: 400px;
        text-align: center;
        color: white;
    }

    .validation-error{
       /* background-color: #f78159;
        padding: 1rem;
        width: 400px;
        text-align: center;*/
        color: #f78159;
    }
</style>

@model LeaveFormViewModel

<div class="title">
    <h2>APPLY FOR LEAVE</h2>
</div>

@using (Html.BeginForm("Create", "Leave", FormMethod.Post))
{
    <div class="form-section">
        @if (ViewData["Error"] != null)
        {
            <div class="error-summary">
                <div>
                    @ViewData["Error"]
                </div>
            </div>
        }

        @if(!Model.HasLeaveRequest)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Leave.StaffName)
                @Html.EditorFor(model => model.Leave.StaffName, new {htmlAttributes = new { @class = "form-control", @readonly = "readonly" }})
                @Html.ValidationMessageFor(model => model.Leave.StaffName)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Leave.ActingStaffId)
                @Html.DropDownListFor(model => model.Leave.ActingStaffId, new SelectList( Model.Users,"Id", "FullName"), "Select Acting Staff", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Leave.ActingStaffId, "", new { @class = "validation-error" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Leave.Start)
                @Html.EditorFor(model => model.Leave.Start, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Leave.Start)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Leave.End)
                @Html.EditorFor(model => model.Leave.End, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Leave.End)
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Leave.StaffName)
                @Html.EditorFor(model => model.Leave.StaffName, new {htmlAttributes = new { @class = "form-control", @readonly = "readonly" }})
                @Html.ValidationMessageFor(model => model.Leave.StaffName)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Leave.ActingStaffId)
                @Html.DropDownListFor(model => model.Leave.ActingStaffId, new SelectList( Model.Users,"Id", "FullName"), "Select Acting Staff", new { @class = "form-control", disabled = "disabled"  })
                @Html.ValidationMessageFor(model => model.Leave.ActingStaffId, "", new { @class = "validation-error" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Leave.Start)
                @Html.EditorFor(model => model.Leave.Start, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"  } })
                @Html.ValidationMessageFor(model => model.Leave.Start)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Leave.End)
                @Html.EditorFor(model => model.Leave.End, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"  } })
                @Html.ValidationMessageFor(model => model.Leave.End)
            </div>
            <button type="submit" class="btn" disabled>Submit</button>
            <p class="validation-error">* This button is disabled because you have an active Leave.</p>
        }
    </div>
}
