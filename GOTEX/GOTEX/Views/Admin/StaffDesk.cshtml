@using System.Linq
@using Microsoft.EntityFrameworkCore;
@model List<ApplicationUser>
@inject IApplication<Application> _application
@inject UserManager<ApplicationUser> _userManager
@inject RoleManager<ApplicationRole> _role

@{
    ViewBag.Title = "Applications on STaff Desk";
    int count = 0;
    var roles = _role.Roles.ToList();
}

<center>
    <div class=" card" style="margin-top: 2em; padding: 1em;">
        <h2 class="card" style="font-size: x-large;">
            <b>Application(s) on Staff Desk</b>
        </h2>
        <table class="table table-striped dataTable">
            <thead>
            <tr>
                <th>#</th>
                <th>Full Name</th>
                <th>Email</th>
                <th>User Role</th>
                <th>Desk Count</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var user in Model)
            {
                if (!_userManager.IsInRoleAsync(user, "Company").Result)
                {
                   
                    count++;
                    var apps = GetDeskCount(user.Email);
                    <tr>
                        <td>@count</td>
                        <td>@user.LastName @user.FirstName</td>
                        <td>@user.Email</td>
                        <td>
                                @{
                                    var role = GetUserRole(user.Email);
                                }
                                @role.DisplayName
                        </td>
                        <td class="text-center">@GetDeskCount(user.Email)</td>
                        <td>
                                <a href="#appModal" data-toggle="modal" class="btn btn-warning btn-xs btnViewStaffDesk" data-email="@user.Id">View Desk</a>
                        </td>
                    </tr> 
                }
            }
            </tbody>
        </table>
    </div>
</center>
<div class="modal" role="dialog" tabindex="-1" id="appModal">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="text-center"><h3 class="modal-title"></h3></div>
            <div class="modal-body" id="modalBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@functions{

    private ApplicationRole GetUserRole(string email)
    {
        var user = _userManager.Users.Include(ur => ur.UserRoles).ThenInclude(r => r.Role).FirstOrDefault(e => e.Email.Equals(email));
        return user.UserRoles.FirstOrDefault().Role;
    }

    private int GetDeskCount(string email) => _application.GetAll().Count(x => x.LastAssignedUserId == email);

    private List<ApplicationUser> GetStaffRoleList(string email)
    {
        var role = GetUserRole(email);
        return _userManager.GetUsersInRoleAsync(role.Name).Result.ToList();
    }

}
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.dataTable').dataTable({ dom: 'Blfrtip'});

        $(document).on('click', '.btnViewStaffDesk', function (e) {
            e.preventDefault();
            $('.modal-title').html('Applications on Staff desk');
            var user = $(this).data('email');
            console.log("befoe...", user);
            $.get('/Admin/StaffApps', { id: user }, function (data) {
                console.log("data...", data);
                $('.modal-body').html(data);
            });
        });
    });
</script>
